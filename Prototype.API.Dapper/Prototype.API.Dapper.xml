<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Prototype.API.Dapper</name>
    </assembly>
    <members>
        <member name="M:Prototype.API.Dapper.Controllers.AlbumsController.GetAllAsync(Prototype.API.Domain.ApiModels.PagingApiModel)">
            <summary>
            Retrieves all albums.
            </summary>
            <param name="paging">Specify offset and limit for data.</param>
            <returns>Albums list.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.AlbumsController.GetAsync(System.Int32)">
            <summary>
            Retrieves an album given an Id.
            </summary>
            <returns>Selected album.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.AlbumsController.GetByArtistIdAsync(System.Int32)">
            <summary>
            Retrieves all the albums given an Artist Id.
            </summary>
            <returns>Selected album.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.AlbumsController.PostAsync(Prototype.API.Domain.ApiResources.SaveAlbumResource)">
            <summary>
            Saves a new album.
            </summary>
            <param name="input">SaveAlbumResource data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.AlbumsController.PutAsync(System.Int32,Prototype.API.Domain.ApiResources.SaveAlbumResource)">
            <summary>
            Updates an existing album according to an Id.
            </summary>
            <param name="id">Album identifier.</param>
            <param name="input">Updated album data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.AlbumsController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a given album according to an Id.
            </summary>
            <param name="id">Album identifier.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.ArtistsController.GetAllAsync(Prototype.API.Domain.ApiModels.PagingApiModel)">
            <summary>
            Retrieves all artists.
            </summary>
            <param name="paging">Specifiy offset and limit for data.</param>
            <returns>Artists list.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.ArtistsController.GetAsync(System.Int32)">
            <summary>
            Retrieves an artist given an Id.
            </summary>
            <returns>Selected artist.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.ArtistsController.PostAsync(Prototype.API.Domain.Resources.SaveArtistResource)">
            <summary>
            Saves a new artist.
            </summary>
            <param name="input">SaveArtistResource data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.ArtistsController.PutAsync(System.Int32,Prototype.API.Domain.Resources.SaveArtistResource)">
            <summary>
            Update an artist.
            </summary>
            <param name="id">Artist identifier.</param>
            <param name="input">SaveArtistResource data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Prototype.API.Dapper.Controllers.ArtistsController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a given artist according to an Id.
            </summary>
            <param name="id">Artist identifier.</param>
            <returns>Response for the request.</returns>
        </member>
    </members>
</doc>
